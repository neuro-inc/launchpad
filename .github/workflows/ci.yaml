name: CI

on:
  push:
    branches: [master]
    tags: ["v*"]
  pull_request:
    branches: [master]

env:
  IMAGE_NAME: "launchpad"

jobs:

  release-app-image:
    name: Release image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Purge old artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 30mins

      - name: Set image tag
        run: |
          echo IMAGE_TAG=${GITHUB_REF#refs/tags/v} >> $GITHUB_ENV

      - name: Login to ghcr.io
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest -f Dockerfile .

      - name: Push image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ghcr.io/neuro-inc/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ghcr.io/neuro-inc/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  release-pr-image:
    name: Release PR image
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Set image tag from PR
        run: |
          # Use PR number as tag
          echo IMAGE_TAG=pr-${{ github.event.pull_request.number }} >> $GITHUB_ENV

      - name: Login to ghcr.io
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest -f Dockerfile .

      - name: Push PR image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ghcr.io/neuro-inc/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ghcr.io/neuro-inc/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üê≥ Docker image for this PR has been built and pushed:\n\n\`ghcr.io/neuro-inc/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}\``
            })

  release-hook-image:
    name: Release hook image
    runs-on: ubuntu-latest
    if: (
        (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
        (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'))
      )
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4
      - name: Purge old artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 30mins
      - name: Login to ghcr.io
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build image
        run: |
          make build-hook-image
      - name: Release branch image
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          # Convert to lowercase, replace anything not a-z0-9_.- with '-'
          export IMAGE_TAG=$(echo "${BRANCH_NAME}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_.-]/-/g')
          make push-hook-image
      - name: Release development image
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          export IMAGE_TAG=master
          make push-hook-image
      - name: Release prod image
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          export IMAGE_TAG=${GITHUB_REF#refs/tags/}
          make push-hook-image
