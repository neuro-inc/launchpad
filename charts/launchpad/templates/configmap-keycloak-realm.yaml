# NOTE:
# realm.json is not a static value, it also contains dynamic URLs for the "frontend" client

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.keycloakRealmImportConfigMapName }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
data:
  realm.json: |-
    {
      "id": "f3806410-a4e6-476a-b806-b2722de95259",
      "realm": "{{ .Values.keycloak.defaultRealm }}",
      "displayName": "Launchpad",
      "displayNameHtml": "",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 86400,
      "accessTokenLifespanForImplicitFlow": 86400,
      "ssoSessionIdleTimeout": 864000,
      "ssoSessionMaxLifespan": 864000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 900,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 86400,
      "actionTokenGeneratedByUserLifespan": 86400,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxTemporaryLockouts": 0,
      "bruteForceStrategy": "MULTIPLE",
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "5921583a-5c56-4f5c-9d4b-3a6c52f099a5",
            "name": "create-realm",
            "description": "${role_create-realm}",
            "composite": false,
            "clientRole": false,
            "containerId": "f3806410-a4e6-476a-b806-b2722de95259",
            "attributes": {}
          },
          {
            "id": "c7bb1bc2-0aa4-43b2-ad96-de42632f7307",
            "name": "admin",
            "description": "${role_admin}",
            "composite": true,
            "composites": {
              "realm": [
                "create-realm"
              ],
              "client": {
                "master-realm": [
                  "view-users",
                  "manage-clients",
                  "create-client",
                  "manage-events",
                  "manage-authorization",
                  "view-realm",
                  "view-authorization",
                  "manage-identity-providers",
                  "view-events",
                  "query-groups",
                  "view-clients",
                  "query-realms",
                  "impersonation",
                  "view-identity-providers",
                  "query-clients",
                  "manage-users",
                  "manage-realm",
                  "query-users"
                ]
              }
            },
            "clientRole": false,
            "containerId": "f3806410-a4e6-476a-b806-b2722de95259",
            "attributes": {}
          },
          {
            "id": "c2f0cdae-20ac-4982-9691-fac3e567e98e",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "f3806410-a4e6-476a-b806-b2722de95259",
            "attributes": {}
          },
          {
            "id": "5b284b12-c296-46d1-a530-9d1962cdfecf",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "f3806410-a4e6-476a-b806-b2722de95259",
            "attributes": {}
          },
          {
            "id": "06f7d60e-180b-41a7-b86c-dd52f640671e",
            "name": "default-roles-master",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "manage-account",
                  "view-profile"
                ]
              }
            },
            "clientRole": false,
            "containerId": "f3806410-a4e6-476a-b806-b2722de95259",
            "attributes": {}
          }
        ],
        "client": {
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "e7a87058-d965-4827-a1b2-9de3f09f00e6",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "c550933e-e1bb-4270-83e8-cfe50a3383d3",
              "attributes": {}
            }
          ],
          "master-realm": [
            {
              "id": "11b51e8f-49a7-427a-a321-79a9b477821d",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "master-realm": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "9a93ca68-aada-4c3c-959c-65426615224a",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "9e1fdd80-7411-442c-a2af-e262a42e16ed",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "6a017710-ad3f-48f7-a7b6-cb8f1152b4e2",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "df5324d4-d53f-499b-bc2e-7842f2dd87ec",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "91e8d2c0-6101-42f0-bfd1-42eaea3c02f1",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "c52957cc-aa1b-49f2-b379-951d8bf291e2",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "951f3c0f-469c-4e5c-a685-f7dfa899f688",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "23ff376b-92b0-40c9-8ed2-5260821be512",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "340b17a5-3dee-44dc-85aa-6ff61c09d756",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "36c01c11-f392-487d-8d55-f6fdf101d76b",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "master-realm": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "7a37768a-de68-4c2b-9500-f28daab9f5df",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "e418ea3c-007b-47e1-83d8-cc5b269cfd67",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "c566f914-b071-43d8-b14b-40146cd866ca",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "03f841b0-04a5-4e25-973d-2a67f655d38c",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "c6e6027f-0661-404e-9837-afbad3453ba9",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "0e649f34-5662-40ef-a014-8dd60c6c1ecb",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            },
            {
              "id": "48cc6760-7105-45a1-b0de-f9cadc1ab86b",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "3c405646-9f73-4b77-915b-6e576e1ffcf7",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "1ba9ec7f-b0c0-4a9c-8508-b5600225f5e3",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "0855fb7c-186f-49f3-8cc3-8a136af486c0",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "426ebabb-61b8-41cd-9cba-ee03599edf6c",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "3afbac5b-2075-4cbb-98e2-5839b9d7864e",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "67698c0f-992a-49a0-a2a1-022462daf2f6",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "148b1352-19c2-4fa2-a3f4-84f8f8c90f6b",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            },
            {
              "id": "cb6a961c-bfb1-4f50-8390-b9fb1fda9db6",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "12d8a43b-527e-4fd8-b861-25be83dbae54",
              "attributes": {}
            }
          ],
          "frontend": []
        }
      },
      "groups": [],
      "defaultRole": {
        "id": "06f7d60e-180b-41a7-b86c-dd52f640671e",
        "name": "default-roles-master",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "f3806410-a4e6-476a-b806-b2722de95259"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "12d8a43b-527e-4fd8-b861-25be83dbae54",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/master/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/master/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        },
        {
          "id": "a967b521-a890-4a9d-ba3b-3a55e8f3a0d3",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/master/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/master/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "668c088f-4fe9-46d5-ae71-a4d46fc50066",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        },
        {
          "id": "05a71dab-4fcd-425d-a1fc-ae338e9b10ee",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        },
        {
          "id": "c550933e-e1bb-4270-83e8-cfe50a3383d3",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        },
        {
          "id": "a0151d56-41f6-4722-af35-0159c9bfffeb",
          "clientId": "frontend",
          "name": "",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "{{ include "launchpad.domainWithProtocol" . }}/api/auth/callback/keycloak",
            "{{ include "launchpad.apiDomainWithProtocol" . }}/auth/callback"
          ],
          "webOrigins": [
            {{ include "launchpad.domainWithProtocol" . | quote }}
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "standard.token.exchange.enabled": "false",
            "login_theme": "apolo",
            "frontchannel.logout.session.required": "true",
            "post.logout.redirect.uris": {{ include "launchpad.domain" . | quote }},
            "display.on.consent.screen": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "pkce.code.challenge.method": "S256",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        },
        {
          "id": "5dae8ad4-f3fa-4522-85eb-4c5374905d24",
          "clientId": "master-realm",
          "name": "master Realm",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "attributes": {
            "realm_client": "true"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        },
        {
          "id": "7f06552e-85d8-4d8e-8ca2-a7f8485dd055",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/master/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/master/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "f70ca326-8edf-4def-a8ca-07ad3f97fe0e",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "organization",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "1f0ec33b-9390-4e2a-82be-213c36eff929",
          "name": "saml_organization",
          "description": "Organization Membership",
          "protocol": "saml",
          "attributes": {
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "66d3ae47-875b-4b88-ad2d-0ad96ae9685b",
              "name": "organization",
              "protocol": "saml",
              "protocolMapper": "saml-organization-membership-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "9b74454b-c499-430c-a6be-684b7dc039ab",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "${rolesScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "4840252b-d023-47f2-885b-96408e9108fd",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "e8b401d7-3ca4-44c9-b065-607903452c8e",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "9bdd4163-351e-4909-87aa-06c362e81107",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "90277734-d79f-44aa-b9ce-cad8f1f52a55",
          "name": "service_account",
          "description": "Specific scope for a client enabled for service accounts",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "93576007-51b7-496c-acd3-cf6e8ea0f6ef",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "238bc3d2-6c3e-4251-be18-346c4c1da2ad",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c5fb221b-aa6e-44fa-b54c-c51b75fd3365",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "0e1a4e30-1500-4595-8702-a104c05a9898",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "ce196d4e-9392-4246-aefe-66552b0e9087",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "474d830f-993d-487f-9826-6407068c4a63",
          "name": "organization",
          "description": "Additional claims about the organization a subject belongs to",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${organizationScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "b2296ffe-e9a4-4630-8c4c-493e31343b1a",
              "name": "organization",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-organization-membership-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "organization",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "c8e8748f-545e-48fb-b5b2-fab82ebb7f05",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${addressScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "5a87df5c-ba02-4715-bc44-3b673d055b73",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "introspection.token.claim": "true",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "b7b2f77b-7cd6-40a1-89ef-2c7ab7b606d4",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${profileScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "63162dcb-2df0-4e83-ad58-3a276d5fd444",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "52ded7a0-7f23-46cb-8ca2-f21a3907ce7f",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5c631aaf-68e8-48fc-8177-bc619e786a3c",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2763d592-b63e-44ad-81c9-e0d9b6f145ea",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "cdf3a4fb-0180-4691-bd02-67b7e785acbc",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2a425efd-11dc-4651-a296-773517a1e236",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "19bee3b1-0038-44f6-9d5b-f3b089d30778",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "85987e32-dd31-4cf0-99d4-49860ee80a9c",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "bd0f9565-be07-48e7-a99a-e502cf993db8",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "ce489ce3-e14b-4487-839d-cdf3a830a281",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "9b671870-eebe-4ebe-8f45-57f4e0976bb4",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "0d5864f9-3bb6-4b8c-9f5e-7cffe59fc8d1",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a126b716-0681-40b6-a915-96f7eaa66057",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d2e0b794-eb86-48d4-a7d2-27f98ee5a909",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "2d13a7cc-0334-474b-bf34-6bf01b3972e9",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${phoneScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "4fff5feb-d5b4-4616-836c-e71c572f5155",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "0eb6b095-d71f-4af4-b0cf-a0c1d304d2f1",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "1bbefdac-0d84-475d-8d03-d0b7d2cc9551",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "53091e60-84f5-4faa-87cc-0696eaabf90d",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "19cf8ff7-fe84-4fc6-a2b2-fe42825a79ba",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "73225054-d0f8-4daa-92cc-bd82b627e453",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "2eeda748-64bf-4549-a8ce-92c58cc3a783",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "f0a13cb3-b05e-4500-b832-58917bc00727",
          "name": "basic",
          "description": "OpenID Connect scope for add all basic claims to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "735567ba-47b2-4e73-98ec-81a2dc7c9fb0",
              "name": "sub",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-sub-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "id": "ec556af1-0822-498e-ac91-b7525ccea0c0",
              "name": "auth_time",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "AUTH_TIME",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "auth_time",
                "jsonType.label": "long"
              }
            }
          ]
        },
        {
          "id": "3dae8ca5-4e18-4af7-8293-b9cb76d5176c",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "6bb7738b-a9fc-49f4-ab66-39d0d6408806",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1b6e75cc-0952-4911-8851-675d36abaf3f",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "134425da-2712-4aac-a751-63c3c8801fef",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${emailScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "bec6049d-874e-465e-97e7-cd48693a763c",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "5456dabb-b305-4e5f-ae24-da81505e3667",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "saml_organization",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt",
        "organization"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "loginTheme": "apolo",
      "accountTheme": "",
      "adminTheme": "",
      "emailTheme": "",
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "540d0d8a-1a23-4cfa-8f53-8776af2cffde",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-address-mapper",
                "oidc-usermodel-property-mapper",
                "saml-role-list-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper"
              ]
            }
          },
          {
            "id": "be69293e-43df-4456-9890-ae154a3eecb0",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-property-mapper",
                "saml-role-list-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-attribute-mapper",
                "oidc-address-mapper"
              ]
            }
          },
          {
            "id": "1b5a3947-c5e1-40f0-aca3-6e2738387ecd",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "0ab4dce2-78f5-4982-afa3-cd41b7dede0f",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "3ac18746-bd17-4fad-a34d-6b4b80335250",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "91504968-ddbd-4b08-9fd3-be75df742934",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "d0d15964-3ad9-4dcb-ab57-2aaea0413d32",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "7d881d8b-b42e-4e10-8c38-3878e4fa07bc",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
          {
            "id": "118118d5-99e8-46f3-ae54-da481361554f",
            "providerId": "declarative-user-profile",
            "subComponents": {},
            "config": {
              "kc.user.profile.config": [
                "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "1cbc5d23-4aa3-478b-b406-507e54545202",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "5796ab1b-db80-4226-ab18-ac93aa5d4cca",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "RSA-OAEP"
              ]
            }
          },
          {
            "id": "0897d59f-4c7b-48b7-865f-459fe22d2075",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "490c1e4a-ba41-4073-b395-5f52038b4d27",
            "name": "hmac-generated-hs512",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS512"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [
        "en"
      ],
      "defaultLocale": "en",
      "authenticationFlows": [
        {
          "id": "7b023d61-77e5-4801-9246-1a6451395c82",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "7b475ab0-e60a-4658-b594-a973057a0383",
          "alias": "Browser - Conditional 2FA",
          "description": "Flow to determine if any 2FA is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "webauthn-authenticator",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-recovery-authn-code-form",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "16c4cc91-c486-45e7-8407-fd6daa5c49a1",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "21e7ca2b-3502-44cc-b96c-c459022c5e85",
          "alias": "First broker login - Conditional 2FA",
          "description": "Flow to determine if any 2FA is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "webauthn-authenticator",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-recovery-authn-code-form",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c0cee56c-4dc8-4d34-86c9-6084ef8e360c",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "08f035b0-d671-4b3e-ae37-f9fc139a50c8",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "172ef050-cfe2-4f0c-b49e-37413c230a85",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0b3092e3-9ac1-431f-9e5c-d64b3205fb06",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional 2FA",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "33cdeefd-5f03-4aa4-9068-5e3b260005dc",
          "alias": "browser",
          "description": "Browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "e6147e51-ab46-4994-a24a-445f7841ad39",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "aafd1f9d-857b-4a7d-a18f-217b8277c4f9",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "aa189a01-8ba5-49ee-85f6-c578a0733116",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "6fe6a55f-7b55-4edc-af78-12de69907861",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fe8ab60f-1a69-4eae-ad95-5f77b3b5178e",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional 2FA",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fcb497ae-ce55-450f-87e4-4ba91d3e1758",
          "alias": "registration",
          "description": "Registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "9c7181d5-38f1-462d-aece-0a97a9ee052d",
          "alias": "registration form",
          "description": "Registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-terms-and-conditions",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 70,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "3a30dd32-4817-4bc4-b9fc-af1c59fe5647",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "3665c361-5a05-4c0b-8041-ceafd9ce7987",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "a900c3cd-0548-48fd-984c-d98d18731d15",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "952c1ab9-c759-409a-8ca6-264f533bb574",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "VERIFY_PROFILE",
          "name": "Verify Profile",
          "providerId": "VERIFY_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 90,
          "config": {}
        },
        {
          "alias": "delete_credential",
          "name": "Delete Credential",
          "providerId": "delete_credential",
          "enabled": true,
          "defaultAction": false,
          "priority": 100,
          "config": {}
        },
        {
          "alias": "idp_link",
          "name": "Linking Identity Provider",
          "providerId": "idp_link",
          "enabled": true,
          "defaultAction": false,
          "priority": 110,
          "config": {}
        },
        {
          "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
          "name": "Recovery Authentication Codes",
          "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
          "enabled": true,
          "defaultAction": false,
          "priority": 120,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "firstBrokerLoginFlow": "first broker login",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "actionTokenGeneratedByUserLifespan.verify-email": "",
        "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
        "clientOfflineSessionIdleTimeout": "0",
        "actionTokenGeneratedByUserLifespan.execute-actions": "",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "shortVerificationUri": "",
        "actionTokenGeneratedByUserLifespan.reset-credentials": "",
        "darkMode": "true"
      },
      "keycloakVersion": "26.3.0",
      "userManagedAccessAllowed": false,
      "organizationsEnabled": false,
      "verifiableCredentialsEnabled": false,
      "adminPermissionsEnabled": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
